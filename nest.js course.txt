lecture title:
ŞÈá Ãä äÈÏÃ
before we get started

title:
ÊÚáã nest.js ãä ÇáÕİÑ
learn Nest.js from scratch

Sub title:
ÊÚáã nest.js
learning nest.js

description:
ÊÚáã ÊØæíÑ ÇáæÇÌåÉ ÇáÎáİíÉ ÈÇÓÊÎÏÇã nest.js , mongo db, microservice, and docker
learn backend development using nest.js, mongo db, microservice, and docker


Objectives:
İåã ÈäíÉ Nest.js æÇáÊÕãíã ÇáãÚíÇÑí¡

ÊÚáã ÅäÔÇÁ æÍÏÇÊ ÇáÊÍßã æÇáÊÚÇãá ãÚ ØáÈÇÊ HTTP¡

ÅÊŞÇä ÍŞä ÇáÊÈÚíÇÊ æãŞÏãí ÇáÎÏãÉ İí Nest.js¡

ÊäİíĞ ÇáãÕÇÏŞÉ ÈÇÓÊÎÏÇã JWT æPassport¡

ÇáÚãá ãÚ TypeORM Ãæ Mongoose áÏãÌ ŞæÇÚÏ ÇáÈíÇäÇÊ¡

ÅäÔÇÁ æÇÌåÇÊ ÈÑãÌÉ ÊØÈíŞÇÊ RESTful ÈÇÊÈÇÚ ÃİÖá ÇáããÇÑÓÇÊ¡

İåã ÈäíÉ ÇáÎÏãÇÊ ÇáãÕÛÑÉ ãÚ Nest.js¡

ÊÚáã ÊäİíĞ WebSockets ÈÇÓÊÎÏÇã ÈæÇÈÇÊ Nest.js¡

ÊäİíĞ ÇáÊÍŞŞ ãä ÇáØáÈÇÊ æãÚÇáÌÉ ÇáÃÎØÇÁ¡

ÅÊŞÇä ÇÓÊÑÇÊíÌíÇÊ ÇÎÊÈÇÑ ÊØÈíŞÇÊ Nest.js


Understand Nest.js architecture and modular design,

Learn to create controllers and handle HTTP requests,

Master dependency injection and providers in Nest.js,

Implement authentication using JWT and Passport,

Work with TypeORM or Mongoose for database integration,

Create RESTful APIs following best practices,

Understand microservices architecture with Nest.js,

Learn WebSockets implementation with Nest.js gateways,

Implement request validation and error handling,

Master testing strategies for Nest.js applications

Understand Nest.js architecture and modular design,Learn to create controllers and handle HTTP requests,Master dependency injection and providers in Nest.js,Implement authentication using JWT and Passport,Work with TypeORM or Mongoose for database integration,Create RESTful APIs following best practices,Understand microservices architecture with Nest.js,Learn WebSockets implementation with Nest.js gateways,Implement request validation and error handling,Master testing strategies for Nest.js applications,

welcome:
ÃåáÇ Èß ÈÚÇáã ÊØæíÑ ÇáæíÈ
welcome in world web development